///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace firstScriptCADImporter
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Login recording.
    /// </summary>
    [TestModule("b1698943-e27a-478e-bb07-22586a508336", ModuleType.Recording, 1)]
    public partial class Login : ITestModule
    {
        /// <summary>
        /// Holds an instance of the firstScriptCADImporterRepository repository.
        /// </summary>
        public static firstScriptCADImporterRepository repo = firstScriptCADImporterRepository.Instance;

        static Login instance = new Login();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Login()
        {
            username = "username";
            password = "password";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Login Instance
        {
            get { return instance; }
        }

#region Variables

        string _username;

        /// <summary>
        /// Gets or sets the value of variable username.
        /// </summary>
        [TestVariable("560fbe84-4692-43e0-a7d4-a1116a04edd6")]
        public string username
        {
            get { return _username; }
            set { _username = value; }
        }

        string _password;

        /// <summary>
        /// Gets or sets the value of variable password.
        /// </summary>
        [TestVariable("4784dc6e-b210-486c-b5ff-63eb6c08cbff")]
        public string password
        {
            get { return _password; }
            set { _password = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UpchainCADImporter.Btn_textLogin' at Center.", repo.UpchainCADImporter.Btn_textLoginInfo, new RecordItemIndex(0));
            repo.UpchainCADImporter.Btn_textLogin.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LogInToUpchain.fieldUsername' at Center.", repo.LogInToUpchain.fieldUsernameInfo, new RecordItemIndex(1));
            repo.LogInToUpchain.fieldUsername.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$username' with focus on 'LogInToUpchain.fieldUsername'.", repo.LogInToUpchain.fieldUsernameInfo, new RecordItemIndex(2));
            repo.LogInToUpchain.fieldUsername.PressKeys(username);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LogInToUpchain.fieldPassword' at Center.", repo.LogInToUpchain.fieldPasswordInfo, new RecordItemIndex(3));
            repo.LogInToUpchain.fieldPassword.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$password' with focus on 'LogInToUpchain.fieldPassword'.", repo.LogInToUpchain.fieldPasswordInfo, new RecordItemIndex(4));
            repo.LogInToUpchain.fieldPassword.PressKeys(password);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LogInToUpchain.ButtonContinue' at Center.", repo.LogInToUpchain.ButtonContinueInfo, new RecordItemIndex(5));
            repo.LogInToUpchain.ButtonContinue.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
